name: Update Homebrew Formula

on:
  release:
    types: [published, released]
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag to update Homebrew formula for'
        required: true
        type: string

permissions:
  contents: read

jobs:
  update-homebrew:
    runs-on: ubuntu-latest    
    
    steps:
      - name: Debug Event
        run: |
          echo "Event triggered:"
          echo "  Event name: ${{ github.event_name }}"
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "  Manual trigger with tag: ${{ github.event.inputs.release_tag }}"
          else
            echo "  Action: ${{ github.event.action }}"
            echo "  Release Tag: ${{ github.event.release.tag_name }}"
            echo "  Release Name: ${{ github.event.release.name }}"
            echo "  Published: ${{ github.event.release.published_at }}"
            echo "  Draft: ${{ github.event.release.draft }}"
            echo "  Prerelease: ${{ github.event.release.prerelease }}"
          fi
      
      - name: Checkout main repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: main
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
      
      - name: Extract version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.release_tag }}"
          else
            VERSION="${{ github.event.release.tag_name }}"
          fi
          VERSION_NO_V=${VERSION#v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "VERSION_NO_V=$VERSION_NO_V" >> $GITHUB_OUTPUT
          echo "Using version: $VERSION (no v: $VERSION_NO_V)"
      
      - name: Download checksums
        run: |
          echo "Downloading checksums for version: ${{ steps.version.outputs.VERSION }}"
          CHECKSUM_URL="https://github.com/deployaja/deployaja-cli/releases/download/${{ steps.version.outputs.VERSION }}/checksums.txt"
          echo "URL: $CHECKSUM_URL"
          
          # Wait a bit for the release assets to be fully available
          sleep 30
          
          # Download with retry logic
          for i in {1..5}; do
            if curl -sL "$CHECKSUM_URL" > checksums.txt; then
              echo "‚úÖ Successfully downloaded checksums"
              break
            else
              echo "‚ùå Attempt $i failed, retrying in 30 seconds..."
              sleep 30
            fi
          done
          
          # Verify the file exists and has content
          if [ ! -s checksums.txt ]; then
            echo "‚ùå checksums.txt is empty or doesn't exist"
            echo "Available assets:"
            curl -sL "https://api.github.com/repos/deployaja/deployaja-cli/releases/tags/${{ steps.version.outputs.VERSION }}" | jq -r '.assets[].name'
            exit 1
          fi
          
          echo "üìÑ Checksums file content:"
          cat checksums.txt
      
      - name: Extract checksums
        id: checksums
        run: |
          SHA256_DARWIN_ARM64=$(grep "aja-darwin-arm64.tar.gz" checksums.txt | cut -d' ' -f1)
          SHA256_DARWIN_AMD64=$(grep "aja-darwin-amd64.tar.gz" checksums.txt | cut -d' ' -f1)
          SHA256_LINUX_ARM64=$(grep "aja-linux-arm64.tar.gz" checksums.txt | cut -d' ' -f1)
          SHA256_LINUX_AMD64=$(grep "aja-linux-amd64.tar.gz" checksums.txt | cut -d' ' -f1)
          
          echo "SHA256_DARWIN_ARM64=$SHA256_DARWIN_ARM64" >> $GITHUB_OUTPUT
          echo "SHA256_DARWIN_AMD64=$SHA256_DARWIN_AMD64" >> $GITHUB_OUTPUT
          echo "SHA256_LINUX_ARM64=$SHA256_LINUX_ARM64" >> $GITHUB_OUTPUT
          echo "SHA256_LINUX_AMD64=$SHA256_LINUX_AMD64" >> $GITHUB_OUTPUT
      
      - name: Update Homebrew Formula
        run: |
          # Update version
          sed -i "s/version \".*\"/version \"${{ steps.version.outputs.VERSION_NO_V }}\"/" Formula/aja.rb
          
          # Update checksums
          sed -i "s/PLACEHOLDER_SHA256_ARM64/${{ steps.checksums.outputs.SHA256_DARWIN_ARM64 }}/" Formula/aja.rb
          sed -i "s/PLACEHOLDER_SHA256_AMD64/${{ steps.checksums.outputs.SHA256_DARWIN_AMD64 }}/" Formula/aja.rb
          sed -i "s/PLACEHOLDER_SHA256_LINUX_ARM64/${{ steps.checksums.outputs.SHA256_LINUX_ARM64 }}/" Formula/aja.rb
          sed -i "s/PLACEHOLDER_SHA256_LINUX_AMD64/${{ steps.checksums.outputs.SHA256_LINUX_AMD64 }}/" Formula/aja.rb
      
      - name: Create/Update Homebrew Tap Repository
        env:
          TAP_TOKEN: ${{ secrets.TAP_TOKEN }}
        run: |
          if [ -n "$TAP_TOKEN" ]; then
            echo "Updating homebrew-tap repository..."
            
            # Clone the tap repository
            git clone https://x-access-token:$TAP_TOKEN@github.com/deployaja/homebrew-tap.git tap-repo
            cd tap-repo
            
            # Copy the updated formula
            mkdir -p Formula
            cp ../Formula/aja.rb Formula/aja.rb
            
            # Commit and push to tap repository
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            
            git add Formula/aja.rb
            git commit -m "Update aja to ${{ steps.version.outputs.VERSION }}" || exit 0
            git push origin main
            
            echo "‚úÖ Successfully updated homebrew-tap repository"
          else
            echo "‚ö†Ô∏è  TAP_TOKEN not set. Skipping tap repository update."
            echo "To enable automatic tap updates, set the TAP_TOKEN secret."
          fi 